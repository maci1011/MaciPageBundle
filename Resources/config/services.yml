
services:

    # ---> Page

    maci_page.form.type.page:
        class: Maci\PageBundle\Form\Page\PageType
        tags:
            - { name: form.type, alias: page }

    maci_page.menu_builder:
        class: Maci\PageBundle\Menu\PageMenuBuilder
        arguments: ["@knp_menu.factory","@doctrine.orm.entity_manager","@maci.translator"]
        tags:
            - { name: knp_menu.menu_builder, method: createMainMenu, alias: main }
            - { name: knp_menu.menu_builder, method: createLeftMenu, alias: left }
            - { name: knp_menu.menu_builder, method: createPageLeftMenu, alias: page_left }
            - { name: knp_menu.menu_builder, method: createTermsMenu, alias: terms }

    # ---> Blog

    maci_page.blog.menu_builder:
        class: Maci\PageBundle\Menu\BlogMenuBuilder
        arguments: ["@knp_menu.factory","@doctrine.orm.entity_manager","@request_stack"]
        tags:
            - { name: knp_menu.menu_builder, method: createTagMenu, alias: blog_tag }
            - { name: knp_menu.menu_builder, method: createAuthorMenu, alias: blog_author }

    # ---> Media

    maci_media.form.type.media_album:
        class: Maci\PageBundle\Form\Media\AlbumType
        tags:
            - { name: form.type, alias: media_album }

    maci_media.form.type.media_item:
        class: Maci\PageBundle\Form\Media\ItemType
        tags:
            - { name: form.type, alias: media_item }

    maci_media.form.type.media:
        class: Maci\PageBundle\Form\Media\MediaType
        tags:
            - { name: form.type, alias: media }

    maci_media.form.type.media_tag:
        class: Maci\PageBundle\Form\Media\TagType
        tags:
            - { name: form.type, alias: media_tag }

    maci_media.menu_builder:
        class: Maci\PageBundle\Menu\MediaMenuBuilder
        arguments: ["@knp_menu.factory","@security.authorization_checker","@doctrine.orm.entity_manager","@maci.translator"]
        tags:
            - { name: knp_menu.menu_builder, method: createGalleryMenu, alias: gallery }
            - { name: knp_menu.menu_builder, method: createAlbumMenu, alias: album }

    # ---> Shop

    maci_page.shop.menu_builder:
        class: Maci\PageBundle\Menu\ShopMenuBuilder
        arguments: ["@knp_menu.factory","@doctrine.orm.entity_manager",'@request_stack',"@maci.translator"]
        tags:
            - { name: knp_menu.menu_builder, method: createMainMenu, alias: product_main }
            - { name: knp_menu.menu_builder, method: createLeftMenu, alias: product_left }
            - { name: knp_menu.menu_builder, method: createCustomerServiceMenu, alias: shop_customer_service }
            - { name: knp_menu.menu_builder, method: createTermsMenu, alias: shop_terms }
            - { name: knp_menu.menu_builder, method: createContactsMenu, alias: shop_contacts }

    maci_product.form.type.product:
        class: Maci\PageBundle\Form\Shop\ProductType
        tags:
            - { name: form.type, alias: product }

    maci_product.form.type.category:
        class: Maci\PageBundle\Form\Shop\CategoryType
        tags:
            - { name: form.type, alias: category }

    maci_product.form.type.category_item:
        class: Maci\PageBundle\Form\Shop\CategoryItemType
        tags:
            - { name: form.type, alias: category_item }

    maci_product.form.type.media_item:
        class: Maci\PageBundle\Form\Shop\MediaItemType
        tags:
            - { name: form.type, alias: product_media_item }

    # Ipn Action

    Http\Message\MessageFactory\GuzzleMessageFactory:
        arguments: []

    httplug.message_factory.guzzle:
        alias: Http\Message\MessageFactory\GuzzleMessageFactory
        public: true

    Maci\PageBundle\Action\StoreNotificationAction:
        arguments: ["@doctrine.orm.entity_manager","@request_stack"]

    maci.payment.payum.action.store_notification:
        alias: Maci\PageBundle\Action\StoreNotificationAction
        public: true

    Maci\PageBundle\Action\StoreNotificationSandboxAction:
        arguments: ["@doctrine.orm.entity_manager"]

    maci.payment.payum.action.store_notification_sandbox:
        alias: Maci\PageBundle\Action\StoreNotificationSandboxAction
        public: true

    # Controller Service

    Maci\PageBundle\Controller\OrderService:
        arguments: ["@doctrine.orm.entity_manager","@request_stack","@security.authorization_checker",'@security.token_storage',"@session","@kernel","@maci.addresses","%maci.page.configs%"]

    maci.orders:
        alias: Maci\PageBundle\Controller\OrderService
        public: true

    # Knp Menu
    
    maci.order.menu_builder:
        class: Maci\PageBundle\Menu\OrderMenuBuilder
        arguments: ["@knp_menu.factory","@maci.translator"]
        tags:
            - { name: knp_menu.menu_builder, method: createShopAdminMenu, alias: shop_admin }

    # Form

    maci.order.form.type.cart_add_product_item:
        class: Maci\PageBundle\Form\Order\CartAddProductItemType
        arguments: ["@maci.translator"]
        tags:
            - { name: form.type, alias: cart_add_product_item }

    maci.order.form.type.cart_edit_item:
        class: Maci\PageBundle\Form\Order\CartEditItemType
        tags:
            - { name: form.type, alias: cart_edit_item }

    maci.order.form.type.cart_remove_item:
        class: Maci\PageBundle\Form\Order\CartRemoveItemType
        tags:
            - { name: form.type, alias: cart_remove_item }

    maci.order.form.type.booking:
        class: Maci\PageBundle\Form\Order\CartBookingType
        tags:
            - { name: form.type, alias: cart_booking }

    maci.order.form.type.pickup:
        class: Maci\PageBundle\Form\Order\CartPickupType
        tags:
            - { name: form.type, alias: cart_pickup }

    maci.order.form.type.billing_address:
        class: Maci\PageBundle\Form\Order\CartBillingAddressType
        arguments: ["@maci.orders","@maci.addresses"]
        tags:
            - { name: form.type, alias: cart_billing_address }

    maci.order.form.type.shipping_address:
        class: Maci\PageBundle\Form\Order\CartShippingAddressType
        arguments: ["@maci.orders","@maci.addresses"]
        tags:
            - { name: form.type, alias: cart_shipping_address }

    maci.order.form.type.checkout:
        class: Maci\PageBundle\Form\Order\CartCheckoutType
        arguments: ["@maci.orders"]
        tags:
            - { name: form.type, alias: cart_checkout }

    maci.order.form.type.checkout_payment:
        class: Maci\PageBundle\Form\Order\CheckoutPaymentType
        arguments: ["@maci.orders"]
        tags:
            - { name: form.type, alias: order_checkout_payment }

    maci.order.form.type.checkout_shipping:
        class: Maci\PageBundle\Form\Order\CheckoutShippingType
        arguments: ["@maci.orders"]
        tags:
            - { name: form.type, alias: order_checkout_shipping }

    maci.order.form.type.mail:
        class: Maci\PageBundle\Form\Order\MailType
        arguments: ["@maci.translator"]
        tags:
            - { name: form.type, alias: order_mail }

    maci.order.form.type.payment:
        class: Maci\PageBundle\Form\Order\PaymentType
        tags:
            - { name: form.type, alias: order_payment }

    # Orderly Bundle
    # maci.order.paypal_im_received:
    #     class: Maci\PageBundle\Event\OrderPayPalListener
    #     arguments: ["@doctrine.orm.entity_manager"]
    #     tags:
    #         - { name: kernel.event_listener, event: paypal.ipn.receive, method: onIPNReceive }

    # Mailer

    Maci\PageBundle\Controller\MailerService:
        arguments: ["@doctrine.orm.entity_manager","@mailer","@templating","%env(APP_ENV)%","%server_email%","%server_email_int%"]

    maci.mailer:
        alias: Maci\PageBundle\Controller\MailerService
        public: true

    maci_mailer.menu_builder:
        class: Maci\PageBundle\Menu\MailerMenuBuilder
        arguments: ["@knp_menu.factory","@maci.translator"]
        tags:
            - { name: knp_menu.menu_builder, method: createLeftMenu, alias: mailer_left }

    maci_mailer.form.type.subscribe:
        class: Maci\PageBundle\Form\Mailer\SubscribeType
        arguments: ["@request_stack","@maci.translator"]
        tags:
            - { name: form.type, alias: subscribe }


